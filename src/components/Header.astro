---
// src/components/Header.astro
const navItems = [
  { href: "/", text: "Home" },
  { href: "/about", text: "About" },
  { href: "/contact", text: "Contact" }
];
---

<header class="site-header">
  <div class="header-container">
    <a href="/" class="site-logo">
      <span class="logo-text">The Mwaniki's Report</span>
      <div class="logo-accent"></div>
    </a>
    
    <nav class="main-nav" id="main-nav">
      <ul class="nav-list">
        {navItems.map(item => (
          <li class="nav-item">
            <a href={item.href} class="nav-link">{item.text}</a>
          </li>
        ))}
      </ul>
    </nav>
    
    <button class="mobile-menu-button" id="mobile-menu-toggle" aria-label="Toggle navigation menu" aria-expanded="false">
      <span class="hamburger">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </span>
    </button>
  </div>
  
  <div class="mobile-nav-overlay" id="mobile-nav-overlay"></div>
</header>

<script is:inline>
  // Enhanced Mobile Menu Toggle with Accessibility
  function initMobileMenu() {
    const menuButton = document.getElementById('mobile-menu-toggle');
    const nav = document.getElementById('main-nav');
    const overlay = document.getElementById('mobile-nav-overlay');
    const header = document.querySelector('.site-header');
    
    if (!menuButton || !nav || !overlay || !header) return;
    
    let isMenuOpen = false;
    
    function toggleMenu() {
      isMenuOpen = !isMenuOpen;
      
      // Update button state
      menuButton.classList.toggle('active', isMenuOpen);
      menuButton.setAttribute('aria-expanded', isMenuOpen.toString());
      
      // Update nav state
      nav.classList.toggle('active', isMenuOpen);
      overlay.classList.toggle('active', isMenuOpen);
      
      // Prevent body scroll when menu is open
      document.body.style.overflow = isMenuOpen ? 'hidden' : '';
      
      // Focus management
      if (isMenuOpen) {
        nav.querySelector('.nav-link')?.focus();
      } else {
        menuButton.focus();
      }
    }
    
    function closeMenu() {
      if (isMenuOpen) {
        toggleMenu();
      }
    }
    
    // Event listeners
    menuButton.addEventListener('click', toggleMenu);
    overlay.addEventListener('click', closeMenu);
    
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isMenuOpen) {
        closeMenu();
      }
    });
    
    // Close menu on window resize to desktop size
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768 && isMenuOpen) {
        closeMenu();
      }
    });
    
    // Scroll effect for header
    let lastScrollY = window.scrollY;
    
    function handleScroll() {
      const currentScrollY = window.scrollY;
      
      // Add scrolled class for styling
      header.classList.toggle('scrolled', currentScrollY > 50);
      
      // Update scroll indicator
      const scrollProgress = Math.min(currentScrollY / (document.documentElement.scrollHeight - window.innerHeight), 1);
      const indicator = header.querySelector('.header-scroll-indicator');
      if (indicator) {
        indicator.style.width = (scrollProgress * 100) + '%';
      }
      
      lastScrollY = currentScrollY;
    }
    
    // Throttled scroll listener
    let scrollTimeout;
    window.addEventListener('scroll', () => {
      if (!scrollTimeout) {
        scrollTimeout = setTimeout(() => {
          handleScroll();
          scrollTimeout = null;
        }, 16); // ~60fps
      }
    });
    
    // Set active nav link based on current page
    function setActiveNavLink() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('.nav-link');
      
      navLinks.forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('href') === currentPath || 
            (currentPath === '/' && link.getAttribute('href') === '/')) {
          link.classList.add('active');
        }
      });
    }
    
    // Initialize active link
    setActiveNavLink();
    
    // Update active link on navigation (for SPAs)
    window.addEventListener('popstate', setActiveNavLink);
  }
  
  // Initialize when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }
</script>