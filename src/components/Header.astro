---
import { getCollection } from 'astro:content';

// Fetch categories and posts dynamically
const posts = await getCollection('posts');
const categories = [...new Set(posts.map(post => post.data.category))].filter(Boolean);

// Fetch latest post for top story ticker
const topStory = posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())[0];

const navItems = [
  { href: '/', text: 'Home' },
  { href: '/about', text: 'About' },
  { href: '/contact', text: 'Contact' },
];
---

<header class="site-header" role="banner">
  <a href="#main-content" class="skip-link">Skip to main content</a>

  <!-- Top Story Ticker -->
  {topStory && (
    <div class="top-story-ticker" role="region" aria-live="polite">
      <span class="ticker-label">TOP STORY</span>
      <a href={`/posts/${topStory.slug}`} class="ticker-link" aria-label={`Top Story: ${topStory.data.title}`}>
        <span class="ticker-text">{topStory.data.title}</span>
      </a>
    </div>
  )}
  {!topStory && (
    <div class="top-story-ticker" role="region" aria-live="polite">
      <span class="ticker-label">TOP STORY</span>
      <span class="ticker-text">Stay tuned for the latest news!</span>
    </div>
  )}

  <div class="header-container">
    <div class="logo-title-section">
      <a href="/" class="site-logo" aria-label="Jonathan Mwaniki News Home">
        <img src="/Jonathan-Mwaniki-logo.png" alt="Jonathan Mwaniki News Logo" class="logo-image" />
      </a>
      <div class="title-tagline">
        <h1 class="site-title">
          The <span class="highlight">Mwaniki</span> Report
        </h1>
        <p class="site-tagline">Kenyaâ€™s Premier News Source</p>
      </div>
    </div>

    <div class="mobile-controls">
      <button class="mobile-menu-button" id="mobile-menu-toggle" aria-label="Toggle navigation menu" aria-expanded="false">
        <svg width="24" height="24" viewBox="0 0 24 24" focusable="false" fill="none" stroke="var(--accent-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="hamburger-icon" aria-hidden="true">
          <line x1="3" y1="6" x2="21" y2="6" class="hamburger-line"/>
          <line x1="3" y1="12" x2="21" y2="12" class="hamburger-line"/>
          <line x1="3" y1="18" x2="21" y2="18" class="hamburger-line"/>
        </svg>
      </button>
      <button class="search-button" id="search-toggle" aria-label="Toggle search" aria-expanded="false">
        <svg width="24" height="24" viewBox="0 0 24 24" focusable="false" fill="none" stroke="var(--accent-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="search-icon" aria-hidden="true">
          <circle cx="11" cy="11" r="8"/>
          <line x1="21" y1="21" x2="16.65" y2="16.65"/>
        </svg>
      </button>
    </div>
  </div>

  <nav class="main-nav" id="main-nav" aria-label="Main navigation">
    <ul class="nav-list">
      {navItems.map(item => (
        <li class="nav-item">
          <a href={item.href} class="nav-link">{item.text}</a>
        </li>
      ))}
      <li class="nav-item category-nav">
        <button class="category-toggle" aria-expanded="false" aria-controls="category-menu">
          Categories
          <svg width="16" height="16" viewBox="0 0 24 24" focusable="false" fill="none" stroke="currentColor" class="chevron">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <ul class="category-menu" id="category-menu">
          {categories.map(category => (
            <li>
              <a href={`/category/${category.toLowerCase()}`} class="category-link">{category}</a>
            </li>
          ))}
        </ul>
      </li>
    </ul>

    <div class="contact-info">
      <a href="mailto:info@jonathanmwaniki.co.ke" class="contact-link" title="Email us" aria-label="Email Jonathan Mwaniki News">
        <svg width="20" height="20" viewBox="0 0 24 24" focusable="false" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
          <polyline points="22,6 12,13 2,6"/>
        </svg>
        <span class="contact-text">info@jonathanmwaniki.co.ke</span>
      </a>
      <a href="https://x.com/maestropuns" class="contact-link" title="Follow on X" aria-label="Follow Jonathan Mwaniki on X" target="_blank" rel="noopener noreferrer">
        <svg width="20" height="20" viewBox="0 0 24 24" focusable="false" fill="currentColor">
          <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
        </svg>
        <span class="contact-text">@maestropuns</span>
      </a>
      <a href="https://facebook.com/jonathanmwaniki" class="contact-link" title="Follow on Facebook" aria-label="Follow Jonathan Mwaniki on Facebook" target="_blank" rel="noopener noreferrer">
        <svg width="20" height="20" viewBox="0 0 24 24" focusable="false" fill="currentColor">
          <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"/>
        </svg>
        <span class="contact-text">Jonathan Mwaniki</span>
      </a>
      <a href="https://instagram.com/jonathanmwaniki" class="contact-link" title="Follow on Instagram" aria-label="Follow Jonathan Mwaniki on Instagram" target="_blank" rel="noopener noreferrer">
        <svg width="20" height="20" viewBox="0 0 24 24" focusable="false" fill="currentColor">
          <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849s-.012 3.584-.069 4.849c-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849s.012-3.584.07-4.849c.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948s.014 3.668.072 4.948c.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072s3.668-.014 4.948-.072c4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948s-.014-3.667-.072-4.947c-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
        </svg>
        <span class="contact-text">@jonathanmwaniki</span>
      </a>
    </div>
  </nav>

  <!-- Search Overlay -->
  <div class="search-overlay" id="search-overlay" aria-hidden="true">
    <div class="search-container">
      <form class="search-form" id="search-form" role="search" action="/search">
        <label for="search-input" class="visually-hidden">Search articles</label>
        <input
          type="text"
          id="search-input"
          name="query"
          placeholder="Search articles..."
          class="search-input"
          aria-label="Search articles"
          autocomplete="off"
        />
        <button type="submit" class="search-submit" aria-label="Submit search">
          <svg width="20" height="20" viewBox="0 0 24 24" focusable="false" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="11" cy="11" r="8"/>
            <line x1="21" y1="21" x2="16.65" y2="16.65"/>
          </svg>
        </button>
      </form>
      <div class="search-results" id="search-results" aria-live="polite">
        <!-- Results will be populated by JavaScript -->
      </div>
    </div>
    <button class="search-close" id="search-close" aria-label="Close search">
      <svg width="24" height="24" viewBox="0 0 24 24" focusable="false" fill="none" stroke="var(--text-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="18" y1="6" x2="6" y2="18"/>
        <line x1="6" y1="6" x2="18" y2="18"/>
      </svg>
    </button>
  </div>

  <div class="mobile-nav-overlay" id="mobile-nav-overlay"></div>
</header>

<style>
  /* Define CSS variables for light and dark themes */
  :root {
    --bg-color: #ffffff;
    --text-color: #141414;
    --subtext-color: #666666;
    --accent-color: #BB1919;
    --accent-hover: #991616;
    --border-color: #E0E0E0;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --ticker-bg: #BB1919;
    --ticker-text: #ffffff;
    --ticker-label-bg: #ffffff;
    --ticker-label-text: #BB1919;
    --focus-outline: #BB1919;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --bg-color: #1a1a1a;
      --text-color: #e2e8f0;
      --subtext-color: #9ca3af;
      --accent-color: #ef4444;
      --accent-hover: #f87171;
      --border-color: #4b5563;
      --shadow-color: rgba(0, 0, 0, 0.3);
      --ticker-bg: #ef4444;
      --ticker-text: #ffffff;
      --ticker-label-bg: #2d2d2d;
      --ticker-label-text: #ef4444;
      --focus-outline: #f87171;
    }
  }

  .site-header {
    background: var(--bg-color);
    border-bottom: 1px solid var(--border-color);
    position: sticky;
    top: 0;
    z-index: 1000;
    transition: box-shadow 0.3s ease;
  }

  .site-header.scrolled {
    box-shadow: 0 2px 4px var(--shadow-color);
  }

  .header-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
  }

  .logo-title-section {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
  }

  .site-logo {
    display: flex;
    align-items: center;
    text-decoration: none;
    flex-shrink: 0;
  }

  .logo-image {
    height: 48px;
    width: auto;
    transition: height 0.3s ease;
  }

  .site-header.scrolled .logo-image {
    height: 40px;
  }

  .title-tagline {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    width: auto;
    max-width: 400px;
    pointer-events: none;
    z-index: 0;
  }

  .site-title {
    font-family: 'ReithSerif', 'Georgia', 'Times', serif;
    font-size: 1.75rem;
    font-weight: 700;
    margin: 0;
    color: var(--text-color);
    letter-spacing: -0.02em;
    pointer-events: auto;
  }

  .site-title .highlight {
    color: var(--accent-color);
  }

  .site-tagline {
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.875rem;
    color: var(--subtext-color);
    margin: 0;
    line-height: 1.2;
    pointer-events: auto;
  }

  .main-nav {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 80%;
    max-width: 320px;
    height: 100%;
    background: var(--bg-color);
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
    padding: 3rem 1.5rem 2rem;
    z-index: 1000;
    transform: translateX(-100%);
    transition: transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    overflow-y: auto;
  }

  .main-nav.active {
    display: flex;
    transform: translateX(0);
  }

  .nav-list {
    list-style: none;
    margin: 0;
    padding: 0;
    flex-direction: column;
    gap: 0;
    width: 100%;
    margin-bottom: 1.5rem;
  }

  .nav-item {
    position: relative;
  }

  .nav-link, .category-link {
    color: var(--text-color);
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 1rem;
    font-weight: 600;
    text-decoration: none;
    padding: 0.8rem 0.5rem;
    display: block;
    border-bottom: 1px solid var(--border-color);
    transition: color 0.3s ease;
  }

  .nav-link:hover, .nav-link.active,
  .category-link:hover, .category-link.active {
    color: var(--accent-color);
  }

  .nav-link:focus, .category-link:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .category-nav {
    margin-bottom: 1.5rem;
  }

  .category-toggle {
    background: none;
    border: none;
    color: var(--text-color);
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 1rem;
    font-weight: 600;
    padding: 0.8rem 0.5rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
    transition: color 0.3s ease;
  }

  .category-toggle:hover, .category-toggle.active {
    color: var(--accent-color);
  }

  .category-toggle:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .category-menu {
    display: none;
    background: var(--bg-color);
    list-style: none;
    padding: 0.5rem 0;
    margin: 0;
  }

  .category-menu.active {
    display: block;
  }

  .category-menu li {
    padding: 0.6rem 1rem;
  }

  .category-link {
    font-size: 0.9rem;
    border-bottom: none;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.6rem;
    padding: 1.5rem 0 0;
    border-top: 2px solid var(--border-color);
    width: 100%;
  }

  .contact-link {
    color: var(--subtext-color);
    padding: 0.6rem 0.5rem;
    border-radius: 6px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.6rem;
    font-size: 0.9rem;
    font-weight: 500;
    text-decoration: none;
    width: 100%;
    justify-content: flex-start;
  }

  .contact-link:hover {
    color: var(--accent-color);
    background: rgba(187, 25, 25, 0.05);
  }

  .contact-link:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .contact-text {
    display: inline;
  }

  .mobile-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    z-index: 1;
  }

  .mobile-menu-button, .search-button {
    display: block;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 6px;
    transition: background-color 0.3s ease;
  }

  .mobile-menu-button:hover, .search-button:hover {
    background: rgba(0, 0, 0, 0.05);
  }

  .mobile-menu-button:focus, .search-button:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .hamburger-icon, .search-icon {
    width: 24px;
    height: 24px;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  }

  .mobile-menu-button.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-menu-button.active .hamburger-line:nth-child(2) {
    opacity: 0;
    transform: translateX(20px);
  }

  .mobile-menu-button.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -7px);
  }

  .mobile-nav-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 999;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .mobile-nav-overlay.active {
    display: block;
    opacity: 1;
  }

  .search-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1001;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .search-overlay.active {
    display: flex;
    opacity: 1;
  }

  .search-container {
    background: var(--bg-color);
    border-radius: 8px;
    box-shadow: 0 4px 12px var(--shadow-color);
    max-width: 600px;
    width: 90%;
    padding: 1.5rem;
    position: relative;
    max-height: 80vh;
    overflow-y: auto;
  }

  .search-form {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .search-input {
    flex: 1;
    padding: 0.75rem;
    font-size: 1rem;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    color: var(--text-color);
    background: var(--bg-color);
  }

  .search-input:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .search-submit {
    background: var(--accent-color);
    border: none;
    padding: 0.75rem;
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
  }

  .search-submit:hover {
    background: var(--accent-hover);
  }

  .search-submit:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .search-results {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .result-item {
    padding: 0.5rem 0;
    border-bottom: 1px solid var(--border-color);
  }

  .result-link {
    text-decoration: none;
    color: var(--text-color);
    display: block;
  }

  .result-link:hover,
  .result-link:focus {
    color: var(--accent-color);
  }

  .result-link:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .result-title {
    font-family: 'ReithSerif', 'Georgia', 'Times', serif;
    font-size: 1.25rem;
    margin: 0 0 0.25rem;
  }

  .result-meta {
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.8rem;
    color: var(--subtext-color);
    margin: 0 0 0.25rem;
  }

  .result-description {
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.875rem;
    color: var(--text-color);
    margin: 0;
  }

  .see-more-button {
    display: block;
    text-align: center;
    padding: 0.5rem;
    background: var(--accent-color);
    color: var(--ticker-text);
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.875rem;
    border-radius: 4px;
    text-decoration: none;
    margin-top: 1rem;
    transition: background-color 0.3s ease;
  }

  .see-more-button:hover {
    background: var(--accent-hover);
  }

  .see-more-button:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .no-results {
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.875rem;
    color: var(--subtext-color);
    text-align: center;
    margin: 1rem 0;
  }

  .search-close {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }

  .search-close:hover {
    background: rgba(0, 0, 0, 0.05);
  }

  .search-close:focus {
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  .top-story-ticker {
    background: var(--ticker-bg);
    color: var(--ticker-text);
    padding: 0.2rem 0.2rem 0.2rem 0.4rem;
    font-family: 'ReithSans', 'Helvetica', 'Arial', sans-serif;
    font-size: 0.65rem;
    font-weight: 600;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 0.3rem;
    overflow: hidden;
    white-space: nowrap;
    max-width: 100%;
  }

  .ticker-label {
    background: var(--ticker-label-bg);
    color: var(--ticker-label-text);
    padding: 0.1rem 0.2rem;
    border-radius: 4px;
    font-size: 0.5rem;
    text-transform: uppercase;
    flex-shrink: 0;
  }

  .ticker-link {
    color: var(--ticker-text);
    text-decoration: none;
    display: inline-block;
    max-width: 80%;
  }

  .ticker-link:hover {
    text-decoration: underline;
  }

  .ticker-text {
    display: inline-block;
    animation: marquee 15s linear infinite;
    white-space: nowrap;
  }

  .ticker-link:hover .ticker-text {
    animation-play-state: paused;
  }

  @keyframes marquee {
    0% { transform: translateX(100%); }
    100% { transform: translateX(-100%); }
  }

  @media (prefers-reduced-motion: reduce) {
    .ticker-text {
      animation: none;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 80%;
    }
  }

  .skip-link {
    position: absolute;
    top: -1000px;
    left: 0;
    background: var(--accent-color);
    color: var(--ticker-text);
    padding: 0.5rem;
    z-index: 1001;
  }

  .skip-link:focus {
    top: 0;
    outline: 2px solid var(--focus-outline);
    outline-offset: 2px;
  }

  @media (max-width: 768px) {
    .header-container {
      padding: 0.4rem 0.5rem;
    }

    .logo-title-section {
      gap: 0.4rem;
      justify-content: flex-start;
    }

    .site-logo {
      z-index: 1;
    }

    .title-tagline {
      max-width: 300px;
    }

    .site-title {
      font-size: 1.25rem;
    }

    .site-tagline {
      font-size: 0.7rem;
    }

    .logo-image {
      height: 20px;
    }

    .site-header.scrolled .logo-image {
      height: 18px;
    }

    .main-nav {
      width: 85%;
    }

    .search-container {
      width: 95%;
      padding: 1rem;
    }

    .search-input {
      font-size: 0.9rem;
      padding: 0.5rem;
    }

    .search-submit {
      padding: 0.5rem;
    }

    .result-title {
      font-size: 1.125rem;
    }

    .result-meta {
      font-size: 0.75rem;
    }

    .result-description {
      font-size: 0.8rem;
    }

    .see-more-button {
      font-size: 0.8rem;
      padding: 0.4rem;
    }

    .top-story-ticker {
      font-size: 0.65rem;
      gap: 0.3rem;
    }

    .ticker-label {
      font-size: 0.5rem;
    }

    .ticker-text {
      max-width: 70%;
    }
  }

  @media (max-width: 480px) {
    .title-tagline {
      max-width: 200px;
    }

    .site-title {
      font-size: 1rem;
    }

    .site-tagline {
      font-size: 0.65rem;
    }

    .logo-image {
      height: 18px;
    }

    .site-header.scrolled .logo-image {
      height: 16px;
    }

    .main-nav {
      padding: 2.5rem 1rem 2rem;
      width: 90%;
    }

    .nav-link, .category-toggle {
      font-size: 0.9rem;
      padding: 0.6rem 0.5rem;
    }

    .category-link {
      font-size: 0.85rem;
      padding: 0.5rem 1rem;
    }

    .contact-link {
      font-size: 0.85rem;
      padding: 0.5rem 0.5rem;
    }

    .search-container {
      padding: 0.75rem;
    }

    .search-input {
      font-size: 0.85rem;
    }

    .search-submit {
      padding: 0.4rem;
    }

    .result-title {
      font-size: 1rem;
    }

    .result-meta {
      font-size: 0.7rem;
    }

    .result-description {
      font-size: 0.75rem;
    }

    .see-more-button {
      font-size: 0.75rem;
    }

    .top-story-ticker {
      font-size: 0.6rem;
    }

    .ticker-label {
      font-size: 0.45rem;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .site-header,
    .nav-link,
    .category-link,
    .category-toggle,
    .hamburger-line,
    .main-nav,
    .mobile-nav-overlay,
    .search-overlay,
    .ticker-text {
      transition: none;
      animation: none;
    }
  }
</style>

<script is:inline>
// Preload posts data for client-side search
const posts = [
  <% posts.forEach(post => { %>
    {
      slug: "<%= post.slug %>",
      title: "<%= post.data.title %>",
      category: "<%= post.data.category || 'Uncategorized' %>",
      tags: <%= JSON.stringify(post.data.tags || []) %>,
      keywords: <%= JSON.stringify(post.data.keywords || []) %>,
      date: "<%= post.data.date %>",
      description: "<%= post.data.description || '' %>",
      content: "<%= post.body.replace(/"/g, '\\"') %>"
    },
  <% }) %>
];

function initHeader() {
  const menuButton = document.getElementById('mobile-menu-toggle');
  const nav = document.getElementById('main-nav');
  const navOverlay = document.getElementById('mobile-nav-overlay');
  const header = document.querySelector('.site-header');
  const categoryToggle = document.querySelector('.category-toggle');
  const categoryMenu = document.getElementById('category-menu');
  const searchButton = document.getElementById('search-toggle');
  const searchOverlay = document.getElementById('search-overlay');
  const searchClose = document.getElementById('search-close');
  const searchForm = document.getElementById('search-form');
  const searchInput = document.getElementById('search-input');
  const searchResults = document.getElementById('search-results');

  if (!menuButton || !nav || !navOverlay || !header || !searchButton || !searchOverlay || !searchClose || !searchForm || !searchInput || !searchResults) return;

  let isMenuOpen = false;
  let isCategoryOpen = false;
  let isSearchOpen = false;

  // Menu Toggle
  function toggleMenu() {
    isMenuOpen = !isMenuOpen;
    menuButton.classList.toggle('active', isMenuOpen);
    menuButton.setAttribute('aria-expanded', isMenuOpen.toString());
    nav.classList.toggle('active', isMenuOpen);
    navOverlay.classList.toggle('active', isMenuOpen);
    document.body.style.overflow = isMenuOpen ? 'hidden' : '';
    
    if (isMenuOpen) {
      const firstNavLink = nav.querySelector('.nav-link');
      if (firstNavLink) setTimeout(() => firstNavLink.focus(), 100);
      if (isSearchOpen) toggleSearch();
    } else {
      menuButton.focus();
      if (isCategoryOpen) toggleCategoryMenu();
    }
  }

  function closeMenu() {
    if (isMenuOpen) toggleMenu();
  }

  menuButton.addEventListener('click', toggleMenu);
  navOverlay.addEventListener('click', () => {
    closeMenu();
    if (isSearchOpen) toggleSearch();
  });

  // Category Menu Toggle
  if (categoryToggle && categoryMenu) {
    function toggleCategoryMenu() {
      isCategoryOpen = !isCategoryOpen;
      categoryToggle.setAttribute('aria-expanded', isCategoryOpen.toString());
      categoryToggle.classList.toggle('active', isCategoryOpen);
      categoryMenu.classList.toggle('active', isCategoryOpen);
    }

    categoryToggle.addEventListener('click', toggleCategoryMenu);
  }

  // Search Toggle
  function toggleSearch() {
    isSearchOpen = !isSearchOpen;
    searchButton.setAttribute('aria-expanded', isSearchOpen.toString());
    searchOverlay.classList.toggle('active', isSearchOpen);
    searchOverlay.setAttribute('aria-hidden', (!isSearchOpen).toString());
    document.body.style.overflow = isSearchOpen ? 'hidden' : '';
    
    if (isSearchOpen) {
      searchInput.focus();
      if (isMenuOpen) closeMenu();
    } else {
      searchButton.focus();
      searchInput.value = '';
      searchResults.innerHTML = '';
    }
  }

  function closeSearch() {
    if (isSearchOpen) toggleSearch();
  }

  searchButton.addEventListener('click', toggleSearch);
  searchClose.addEventListener('click', closeSearch);
  navOverlay.addEventListener('click', closeSearch);

  // Search Functionality
  function performSearch(query) {
    if (!query) {
      searchResults.innerHTML = '<p class="no-results">Enter a search term to find articles.</p>';
      return;
    }

    const words = query.toLowerCase().trim().split(' ').filter(Boolean);
    const results = posts
      .filter(post => {
        const titleWords = (post.title || '').toLowerCase().split(' ');
        const categoryWords = (post.category || '').toLowerCase().split(' ');
        const tagWords = (post.tags || []).join(' ').toLowerCase().split(' ');
        const keywordWords = (post.keywords || []).join(' ').toLowerCase().split(' ');
        const contentWords = (post.content || '').toLowerCase().split(' ').filter(word => word.length > 2);
        return words.some(q =>
          titleWords.some(w => w.includes(q)) ||
          categoryWords.some(w => w.includes(q)) ||
          tagWords.some(w => w.includes(q)) ||
          keywordWords.some(w => w.includes(q)) ||
          contentWords.some(w => w.includes(q))
        );
      })
      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
      .slice(0, 3); // Limit to 3 results

    searchResults.innerHTML = '';
    if (results.length === 0) {
      searchResults.innerHTML = `<p class="no-results">No results found for "${query}". Try a different search term.</p>`;
      return;
    }

    const resultsList = document.createElement('ul');
    resultsList.className = 'results-list';
    results.forEach(post => {
      const li = document.createElement('li');
      li.className = 'result-item';
      li.innerHTML = `
        <a href="/posts/${post.slug}" class="result-link">
          <h2 class="result-title">${post.title}</h2>
          <p class="result-meta">${post.category} | ${new Date(post.date).toLocaleDateString()}</p>
          ${post.description ? `<p class="result-description">${post.description}</p>` : ''}
        </a>
      `;
      resultsList.appendChild(li);
    });
    searchResults.appendChild(resultsList);

    if (posts.filter(post => {
      const titleWords = (post.title || '').toLowerCase().split(' ');
      const categoryWords = (post.category || '').toLowerCase().split(' ');
      const tagWords = (post.tags || []).join(' ').toLowerCase().split(' ');
      const keywordWords = (post.keywords || []).join(' ').toLowerCase().split(' ');
      const contentWords = (post.content || '').toLowerCase().split(' ').filter(word => word.length > 2);
      return words.some(q =>
        titleWords.some(w => w.includes(q)) ||
        categoryWords.some(w => w.includes(q)) ||
        tagWords.some(w => w.includes(q)) ||
        keywordWords.some(w => w.includes(q)) ||
        contentWords.some(w => w.includes(q))
      );
    }).length > 3) {
      const seeMore = document.createElement('a');
      seeMore.className = 'see-more-button';
      seeMore.href = `/search?query=${encodeURIComponent(query)}`;
      seeMore.textContent = 'See More';
      searchResults.appendChild(seeMore);
    }
  }

  searchForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const query = searchInput.value;
    if (query) {
      window.location.href = `/search?query=${encodeURIComponent(query)}`;
    }
  });

  searchInput.addEventListener('input', () => {
    performSearch(searchInput.value);
  });

  // Close menus and search on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      if (isCategoryOpen) toggleCategoryMenu();
      if (isMenuOpen) closeMenu();
      if (isSearchOpen) closeSearch();
    }
  });

  // Header Scroll Effect
  let lastScrollY = window.scrollY;

  function handleScroll() {
    const currentScrollY = window.scrollY;
    header.classList.toggle('scrolled', currentScrollY > 50);
    lastScrollY = currentScrollY;
  }

  let scrollTimeout;
  window.addEventListener('scroll', () => {
    if (!scrollTimeout) {
      scrollTimeout = setTimeout(() => {
        handleScroll();
        scrollTimeout = null;
      }, 50);
    }
  });

  // Set Active Nav and Category Links
  function setActiveLinks() {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-link');
    const categoryLinks = document.querySelectorAll('.category-link');

    navLinks.forEach(link => {
      link.classList.remove('active');
      const linkPath = link.getAttribute('href');
      if (linkPath === currentPath || (currentPath === '/' && linkPath === '/')) {
        link.classList.add('active');
      }
    });

    categoryLinks.forEach(link => {
      link.classList.remove('active');
      const linkPath = link.getAttribute('href');
      if (currentPath.startsWith(linkPath)) {
        link.classList.add('active');
        if (categoryToggle) categoryToggle.classList.add('active');
      }
    });
  }

  setActiveLinks();
  window.addEventListener('popstate', setActiveLinks);
}

if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initHeader);
} else {
  initHeader();
}
</script>