---
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  note: CollectionEntry<"note">;
  isPreview?: boolean;
};

const { as: Tag = "div", note, isPreview = false } = Astro.props;
const { Content } = await render(note);
---

<article
  class={`${isPreview ? 'bg-gray-100 dark:bg-gray-800 rounded-lg p-4 hover:shadow transition-shadow' : ''}`}
  data-pagefind-body={!isPreview}
>
  <Tag class={`font-medium ${isPreview ? 'text-base' : 'text-lg'}`}>
    {isPreview ? (
      <a 
        href={`/notes/${note.id}/`}
        class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
      >
        {note.data.title}
      </a>
    ) : (
      <h1>{note.data.title}</h1>
    )}
  </Tag>
  
  <FormattedDate
    date={note.data.publishDate}
    class="text-sm text-gray-500 dark:text-gray-400 mt-1"
    dateTimeOptions={{
      hour: "2-digit",
      minute: "2-digit",
      year: "numeric",
      month: "short",
      day: "numeric"
    }}
  />

  <div class={`prose dark:prose-invert mt-3 max-w-none ${isPreview ? 'line-clamp-3' : ''}`}>
    <Content />
  </div>
</article>