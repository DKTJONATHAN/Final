---
// src/components/PostPreview.astro
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";
import { Image } from "astro:assets";
import placeholderImage from "@/assets/placeholder.jpg";

// 1. Image extraction utility
const getFirstImage = (post: CollectionEntry<"post">): string | undefined => {
  // Priority 1: Frontmatter image
  if (post.data.image) return post.data.image;
  
  // Priority 2: Markdown/MDX images
  const markdownImgMatch = post.body.match(/!\[.*?\]\((.*?)\)/)?.[1];
  if (markdownImgMatch) return markdownImgMatch;
  
  // Priority 3: HTML img tags (for MDX)
  const htmlImgMatch = post.body.match(/<img.*?src=["'](.*?)["']/)?.[1];
  return htmlImgMatch;
};

// 2. Type-safe props
type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  post: CollectionEntry<"post">;
  withDesc?: boolean;
  featured?: boolean;
  lazy?: boolean;
};

const { 
  as: Tag = "article",
  post, 
  withDesc = false, 
  featured = false,
  lazy = true
} = Astro.props;

// 3. Get image and fallback
const firstImage = getFirstImage(post);
const imageUrl = firstImage 
  ? new URL(firstImage, import.meta.url).toString() 
  : placeholderImage;
---

<Tag class="group relative overflow-hidden rounded-xl border border-gray-200 dark:border-gray-700 shadow-sm hover:shadow-md transition-all duration-300 flex flex-col h-full">
  <!-- Image Section -->
  <div class="relative aspect-[16/9] overflow-hidden bg-gray-100 dark:bg-gray-800">
    {firstImage ? (
      <Image
        src={imageUrl}
        alt={post.data.title}
        width={800}
        height={450}
        loading={lazy ? "lazy" : "eager"}
        decoding="async"
        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
        formats={['avif', 'webp', 'jpg']}
        quality={80}
      />
    ) : (
      <img
        src={placeholderImage}
        alt="Default placeholder"
        class="w-full h-full object-cover opacity-70"
        loading={lazy ? "lazy" : "eager"}
      />
    )}
  </div>

  <!-- Content Section -->
  <div class="p-6 flex-1 flex flex-col">
    <div class="flex items-center gap-3 mb-3">
      <FormattedDate
        class="text-sm font-medium text-gray-500 dark:text-gray-400"
        date={post.data.publishDate}
      />
      {post.data.draft && (
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">
          Draft
        </span>
      )}
    </div>

    <h3 class={`${featured ? 'text-2xl' : 'text-xl'} font-bold text-gray-900 dark:text-white mb-3 leading-tight flex-1`}>
      <a 
        class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors after:absolute after:inset-0"
        data-astro-prefetch
        href={`/posts/${post.slug || post.id}/`}
      >
        {post.data.title}
      </a>
    </h3>

    {withDesc && post.data.description && (
      <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
        {post.data.description}
      </p>
    )}

    {post.data.tags?.length > 0 && (
      <div class="flex flex-wrap gap-2 mt-auto pt-2">
        {post.data.tags.slice(0, 3).map((tag) => (
          <a
            href={`/tags/${tag}/`}
            class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
            aria-label={`View posts tagged ${tag}`}
          >
            #{tag}
          </a>
        ))}
      </div>
    )}
  </div>
</Tag>

<style is:global>
  /* Fix for aspect ratio on older browsers */
  @supports not (aspect-ratio: 16/9) {
    .relative.aspect-\\[16\\/9\\]::before {
      content: "";
      display: block;
      padding-bottom: 56.25%;
      float: left;
    }
  }
</style>