---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  title: string;
  description?: string;
  canonical?: string;
}

const { title, description = "Professional news and insights from The Mwaniki's Report", canonical } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    {canonical && <link rel="canonical" href={canonical} />}
    <title>{title}</title>
    <style>
        /* CSS RESET */
        *, *::before, *::after { box-sizing: border-box; }
        * { margin: 0; padding: 0; }
        html, body { height: 100%; }
        body { line-height: 1.5; -webkit-font-smoothing: antialiased; }
        img, picture, video, canvas, svg { display: block; max-width: 100%; }
        input, button, textarea, select { font: inherit; }
        p, h1, h2, h3, h4, h5, h6 { overflow-wrap: break-word; }
        
        /* GLOBAL STYLES */
        :root {
            --primary-red: #dc2626;
            --primary-red-dark: #b91c1c;
            --primary-red-light: #fef2f2;
            --text-primary: #111827;
            --text-secondary: #6b7280;
            --text-light: #9ca3af;
            --bg-white: #ffffff;
            --bg-gray-light: #f9fafb;
            --bg-gray-medium: #f3f4f6;
            --border-gray: #e5e7eb;
            --max-width: 1200px;
            --spacing: 1.5rem;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            color: var(--text-primary);
            background-color: var(--bg-white);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        
        main {
            flex: 1;
            width: 100%;
            max-width: var(--max-width);
            margin: 0 auto;
            padding: var(--spacing);
        }
    </style>
</head>
<body>
    <Header />
    
    <main>
        <slot />
    </main>
    
    <Footer />

    <script is:inline>
        // Mobile menu toggle
        document.addEventListener('DOMContentLoaded', () => {
            const mobileMenuButton = document.querySelector('[data-mobile-menu-button]');
            const mobileMenu = document.getElementById('mobile-menu');
            
            if (mobileMenuButton && mobileMenu) {
                mobileMenuButton.addEventListener('click', () => {
                    mobileMenu.classList.toggle('hidden');
                    mobileMenuButton.setAttribute('aria-expanded', 
                        mobileMenuButton.getAttribute('aria-expanded') === 'true' ? 'false' : 'true');
                });
            }
        });
    </script>
</body>
</html>