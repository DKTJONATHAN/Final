---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  const categories = [...new Set(posts.map(post => post.data.category))].filter(Boolean);
  return categories.map(category => ({
    params: { category: category.toLowerCase() },
    props: { category, posts: posts.filter(p => p.data.category === category) }
  }));
}

const { category, posts } = Astro.props;
const optimizedTitle = `${category} News Kenya | Latest Updates | Jonathan Mwaniki`;
const optimizedDescription = `Latest ${category} news from Kenya. Stay updated with breaking stories, updates, and trending topics in ${category}.`;
---

<Layout 
  title={optimizedTitle}
  description={optimizedDescription}
  meta={[
    { name: 'keywords', content: `${category} news Kenya, Kenya ${category}, breaking ${category} news, Nairobi ${category}, Jonathan Mwaniki` },
    { name: 'og:title', content: optimizedTitle },
    { name: 'og:description', content: optimizedDescription },
    { name: 'twitter:title', content: optimizedTitle },
    { name: 'twitter:description', content: optimizedDescription }
  ]}
>
  <main class="main-container">
    <header class="category-header">
      <h1>{category} News</h1>
      <p>Latest updates and breaking stories in {category}</p>
    </header>

    <div class="posts-grid">
      {posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()).map(post => (
        <article class="post-card">
          <a href={`/posts/${post.slug}`} class="post-link" aria-label={`Read article: ${post.data.title}`}>
            {post.data.image && (
              <div class="post-image-container">
                <img
                  src={post.data.image}
                  alt={post.data.imageAlt || post.data.title}
                  class="post-image"
                  loading="lazy"
                  width="400"
                  height="240"
                />
              </div>
            )}
            <div class="post-content">
              <div class="post-meta">
                <span class="post-category">{post.data.category}</span>
                <time class="post-date" datetime={post.data.date}>
                  {new Date(post.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}
                </time>
              </div>
              <h3 class="post-title">{post.data.title}</h3>
              {post.data.description && <p class="post-excerpt">{post.data.description}</p>}
              <div class="post-footer">
                <span class="read-more">Read Article</span>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>

    {posts.length === 0 && (
      <div class="empty-state">
        <h2>No {category} news available</h2>
        <p>Check back soon for the latest updates!</p>
      </div>
    )}
  </main>

  <style>
    /* Define CSS variables for light and dark themes */
    :root {
      --bg-color: #ffffff;
      --text-color: #1a1a1a;
      --subtext-color: #4a5568;
      --card-bg: #ffffff;
      --card-border: #e2e8f0;
      --category-bg: #dc2626;
      --category-text: #ffffff;
      --read-more: #dc2626;
      --shadow-color: rgba(0, 0, 0, 0.08);
      --date-color: #64748b;
      --link-hover: #b91c1c;
    }

    /* Dark mode styles */
    @media (prefers-color-scheme: dark) {
      :root {
        --bg-color: #1a1a1a;
        --text-color: #e2e8f0;
        --subtext-color: #9ca3af;
        --card-bg: #2d2d2d;
        --card-border: #4b5563;
        --category-bg: #ef4444;
        --category-text: #ffffff;
        --read-more: #ef4444;
        --shadow-color: rgba(0, 0, 0, 0.3);
        --date-color: #9ca3af;
        --link-hover: #f87171;
      }
    }

    /* Apply variables to styles */
    .main-container {
      background: var(--bg-color);
      color: var(--text-color);
    }

    .category-header {
      padding: 2rem 0;
      text-align: center;
    }
    .category-header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      color: var(--text-color);
    }
    .category-header p {
      font-size: 1.2rem;
      color: var(--subtext-color);
    }
    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin: 2rem 0;
    }
    .post-card {
      background: var(--card-bg);
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 4px 15px var(--shadow-color);
      border: 1px solid var(--card-border);
    }
    .post-link {
      text-decoration: none;
      color: inherit;
      display: block;
    }
    .post-link:hover .read-more {
      color: var(--link-hover);
    }
    .post-image-container {
      height: 200px;
      overflow: hidden;
    }
    .post-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .post-content {
      padding: 1.5rem;
    }
    .post-meta {
      display: flex;
      gap: 0.75rem;
      margin-bottom: 1rem;
    }
    .post-category {
      background: var(--category-bg);
      color: var(--category-text);
      padding: 0.25rem 0.6rem;
      border-radius: 15px;
      font-size: 0.75rem;
      font-weight: 600;
    }
    .post-date {
      color: var(--date-color);
      font-size: 0.85rem;
    }
    .post-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin: 0 0 0.75rem;
      color: var(--text-color);
    }
    .post-excerpt {
      color: var(--subtext-color);
      font-size: 0.95rem;
      line-height: 1.5;
    }
    .post-footer {
      margin-top: 1rem;
    }
    .read-more {
      color: var(--read-more);
      font-weight: 600;
    }
    .empty-state {
      text-align: center;
      padding: 2rem;
      color: var(--subtext-color);
    }
    .empty-state h2 {
      color: var(--text-color);
    }
    @media (max-width: 768px) {
      .posts-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</Layout>