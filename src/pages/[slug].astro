---
// src/pages/[slug].astro
import Layout from '../components/Layout.astro';
import { getCollection } from 'astro:content';
import PostContent from '../components/PostContent.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { title, description, publishDate, author, category, tags } = post.data;

// Calculate reading time
const wordCount = post.body.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200);
---

<Layout title={title} description={description}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <header class="mb-8">
      <div class="flex items-center gap-2 mb-4">
        <span class="px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
          {category}
        </span>
        {tags.map(tag => (
          <span class="px-2 py-1 bg-gray-100 text-gray-800 text-xs rounded-full">
            {tag}
          </span>
        ))}
      </div>
      
      <h1 class="text-3xl md:text-4xl font-bold mb-2">{title}</h1>
      
      <div class="flex flex-wrap items-center gap-4 text-gray-500 text-sm mb-6">
        <span>By {author}</span>
        <span>•</span>
        <time datetime={new Date(publishDate).toISOString()}>
          {new Date(publishDate).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <span>•</span>
        <span>{readingTime} min read</span>
      </div>

      {post.data.image?.src && (
        <figure class="mb-8 rounded-lg overflow-hidden shadow-lg">
          <img
            src={post.data.image.src}
            alt={post.data.image.alt || title}
            class="w-full h-auto max-h-96 object-cover"
            loading="eager"
          />
          {post.data.image.credit && (
            <figcaption class="text-xs text-gray-500 mt-1">
              Credit: {post.data.image.credit}
            </figcaption>
          )}
        </figure>
      )}
    </header>

    <PostContent content={post.body} />

    <footer class="mt-12 pt-6 border-t border-gray-200">
      <div class="flex flex-wrap gap-3 mb-6">
        {tags.map(tag => (
          <a 
            href={`/tags/${tag.toLowerCase()}`}
            class="px-3 py-1 bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-full text-sm transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>
      <a 
        href="/" 
        class="inline-flex items-center text-blue-600 hover:text-blue-800"
      >
        ← Back to all articles
      </a>
    </footer>
  </article>
</Layout>

<style is:global>
  .astro-content {
    line-height: 1.6;
  }
  .astro-content h2 {
    font-size: 1.5rem;
    font-weight: bold;
    margin: 2rem 0 1rem;
  }
  .astro-content p {
    margin-bottom: 1.25rem;
  }
  .astro-content ul, .astro-content ol {
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }
  .astro-content img {
    border-radius: 0.5rem;
    margin: 1.5rem auto;
  }
  .astro-content table {
    width: 100%;
    margin: 1.5rem 0;
    border-collapse: collapse;
  }
  .astro-content table th,
  .astro-content table td {
    padding: 0.75rem;
    border: 1px solid #e5e7eb;
  }
</style>