---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const allPosts = (await getCollection('posts'))
  .sort((a, b) => new Date(b.data.date) - new Date(a.data.date));

const categories = ['All', ...new Set(allPosts.map(post => post.data.category))];
---

<Layout title="Latest News | Jonathan Mwaniki" description="Stay updated with professional insights and articles from Jonathan Mwaniki">
    <div class="container">
        <header class="page-header">
            <h1 class="page-title">Latest News</h1>
            <p class="page-subtitle">Stay updated with the latest insights from Jonathan Mwaniki</p>
            
            <!-- Category Filter (Fixed to work on click) -->
            <nav class="category-nav">
                <ul>
                    {categories.map(category => (
                        <li>
                            <button 
                                class="category-link ${category === 'All' ? 'active' : ''}" 
                                onclick={`filterPosts('${category}')`}
                            >
                                {category}
                            </button>
                        </li>
                    ))}
                </ul>
            </nav>
        </header>

        <!-- Posts Grid (Original image styling restored) -->
        <div class="posts-grid">
            {allPosts.map(post => (
                <article 
                    class="post-card" 
                    data-category={post.data.category}
                >
                    <a href={`/posts/${post.slug}`} class="post-link">
                        <div class="post-image-container">
                            <img
                                src={post.data.image}
                                alt={post.data.imageAlt || post.data.title}
                                class="post-image"
                                loading="lazy"
                                width="400"
                                height="240"
                            />
                            <div class="post-image-overlay"></div>
                        </div>
                        <div class="post-content">
                            <div class="post-meta">
                                <span class="post-category">{post.data.category}</span>
                                <time datetime={post.data.date}>
                                    {new Date(post.data.date).toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                    })}
                                </time>
                            </div>
                            <h3 class="post-title">{post.data.title}</h3>
                            <p class="post-excerpt">{post.data.description}</p>
                            <div class="post-footer">
                                <span class="read-more">
                                    Read more
                                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                    </svg>
                                </span>
                                {post.data.draft && <span class="draft-badge">Draft</span>}
                            </div>
                        </div>
                    </a>
                </article>
            ))}
        </div>
    </div>

    <style is:global>
        /* Your original image styling (restored) */
        .post-image-container {
            position: relative;
            overflow: hidden;
            border-radius: 4px;
        }
        .post-image {
            width: 100%;
            height: auto;
            display: block;
            transition: transform 0.3s ease;
        }
        .post-image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.1);
        }
        .post-card:hover .post-image {
            transform: scale(1.02);
        }

        /* Category Filter (Functional) */
        .category-nav ul {
            display: flex;
            gap: 0.75rem;
            padding: 0;
            list-style: none;
            margin: 1.5rem 0;
            flex-wrap: wrap;
        }
        .category-link {
            padding: 0.5rem 1rem;
            background: #f0f0f0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s ease;
        }
        .category-link:hover,
        .category-link.active {
            background: #BB1919;
            color: white;
        }

        /* Hide posts by default (JavaScript will show matching ones) */
        .post-card { display: none; }
        .post-card[data-category] { display: block; } /* Initially show all if 'All' is active */
    </style>

    <!-- Working Category Filter Script -->
    <script is:inline>
        function filterPosts(category) {
            const posts = document.querySelectorAll('.post-card');
            const buttons = document.querySelectorAll('.category-link');
            
            // Update active button
            buttons.forEach(btn => {
                btn.classList.toggle('active', btn.textContent === category);
            });

            // Show/hide posts
            posts.forEach(post => {
                if (category === 'All' || post.dataset.category === category) {
                    post.style.display = 'block';
                } else {
                    post.style.display = 'none';
                }
            });
        }

        // Initialize to show all posts
        document.addEventListener('DOMContentLoaded', () => filterPosts('All'));
    </script>
</Layout>